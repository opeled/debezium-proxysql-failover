version: '2'
services:
  proxysql:
    image: proxysql/proxysql:latest
    ports:
      - 3306:3306
      - 6033:6033
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
  zookeeper:
    image: quay.io/debezium/zookeeper:1.9
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: quay.io/debezium/kafka:1.9
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  mysqlmaster:
    ports:
     - 3307:3306
    build:
      ./mysqlmaster
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw
    healthcheck:
      test: [ "CMD-SHELL", 'mysqladmin ping' ]
      interval: 10s
      timeout: 2s
      retries: 10
  mysql1:
    build:
      ./mysql1    
    ports:
     - 3308:3306
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw
    depends_on:
      - "check-db-started"
  mysql2:
    ports:
     - 3309:3306
    build:
      ./mysql2
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw
    depends_on:
      - "check-db-started"
  connect:
    image: quay.io/debezium/connect:1.9
    ports:
     - 8083:8083
    links:
     - kafka
     - proxysql
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
  rest_proxy:
    image: confluentinc/cp-kafka-rest:latest
    hostname: rest_proxy
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema_registry:8081
      KAFKA_REST_HOST_NAME: rest_proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGN: '*'
  topics_ui:
    image: landoop/kafka-topics-ui:latest
    hostname: topics_ui
    ports:
      - "8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: http://rest_proxy:8082
      SCHEMAREGISTRY_UI_URL: http://schema_registry:8081
      PROXY: 'true'
    depends_on:
      - zookeeper
      - kafka
      - rest_proxy
  # Wait for MySQL to be joinable.
  check-db-started:
    image: jwilder/dockerize:0.6.1
    depends_on:
      - "mysqlmaster"
    command: 'dockerize -wait=tcp://db:3306'
